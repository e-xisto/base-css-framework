
{% extends "../layouts/default.njk" %}

{% block content %}

{% markdown %}

# Grid

### Contenedores (.container)


- tabla tamaños

Dependiendo de la resolución del dispositivo, `container` tendrá un ancho predeterminado como podemos ver en la tabla a
continuación:

<table class="table-responsive-list table-striped">
	<thead>
		<tr>
			<th>Ancho dispositivo</th>
			<th>Ancho contenedor</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>1200px o más</td>
			<td>1170px</td>
		</tr>
		<tr>
			<td>992px hasta 1199px</td>
			<td>970px</td>
		</tr>
		<tr>
			<td>768px hasta 991px</td>
			<td>750px</td>
		</tr>
		<tr>
			<td>Menos de 767px</td>
			<td>100%</td>
		</tr>
	</tbody>
</table>

- Container fluid

Si en lugar de utilizar la clase `container` utilizamos la clase `container-fluid`, lo que conseguiremos no será un
contenedor con un ancho máximo, sino que este ocupará el ancho al 100%.


- Ver opción de meter clase nuevas BS 4 container-md

Actualmente, nos encontramos desarrollando la opción de añadir un contenedor al ancho 100% dependiendo de la resolución
del dispositvo, añadiendo así dicha función de <a href="https://getbootstrap.com/docs/4.5/layout/overview/#containers">Bootstrap 4</a>.

- No anidar dos contenedores
- Variables breakpoints (mixins)



- Variables modificar contenedor
- Ejemplos

### Filas (.row)

- Alineación vertical
- Distribución horizontal
- no-gutter
- reverse
- no-wrap
- Anidamiento de filas


### Columnas (.col)

- Tamaños
- responsive
- Alineamiento vertical
- Offset
- Order

{% endmarkdown %}

{% endblock %}